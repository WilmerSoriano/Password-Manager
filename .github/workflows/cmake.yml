name: CMake Build (Cross-Platform)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ qtbase5-dev libqt5sql5-mysql libssl-dev

    - name: Set up dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System' --no-progress
        choco install -y mingw --no-progress
        choco install -y openssl --no-progress
        # Qt on Windows: requires prebuilt package or vcpkg (heavier setup).
        # For now we only guarantee core C++ build, you can extend to full Qt later.

    - name: Configure CMake
      run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        if ($env:RUNNER_OS -eq "Windows") {
            cmake --build build --config Release -- /m
        } else {
            cmake --build build --config Release -- -j$env:NUMBER_OF_PROCESSORS
        }



    - name: Run tests
      if: runner.os == 'Linux' # NOTE: for future refrence, GUI tests on Windows are tricky in CI
      run: ctest --test-dir build --output-on-failure
